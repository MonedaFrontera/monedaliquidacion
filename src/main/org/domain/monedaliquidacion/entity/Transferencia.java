package org.domain.monedaliquidacion.entity;

// Generated 9/06/2015 03:23:02 PM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Transferencia generated by hbm2java
 */
@Entity
@Table(name = "transferencia")
public class Transferencia implements java.io.Serializable {

	private int consecutivo;
	private Gastos gastos;
	private Cuentapromotor cuentapromotor;
	private BigDecimal preciobolivar;
	private String tipobolivar;
	private Long valorbolivar;
	private String numcuenta;
	private BigDecimal preciocompra;
	private BigDecimal precioasesor;

	public Transferencia() {
	}

	public Transferencia(Gastos gastos) {
		this.gastos = gastos;
	}

	public Transferencia(Gastos gastos, Cuentapromotor cuentapromotor,
			BigDecimal preciobolivar, String tipobolivar, Long valorbolivar,
			String numcuenta, BigDecimal preciocompra, BigDecimal precioasesor) {
		this.gastos = gastos;
		this.cuentapromotor = cuentapromotor;
		this.preciobolivar = preciobolivar;
		this.tipobolivar = tipobolivar;
		this.valorbolivar = valorbolivar;
		this.numcuenta = numcuenta;
		this.preciocompra = preciocompra;
		this.precioasesor = precioasesor;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "gastos"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "consecutivo", unique = true, nullable = false)
	public int getConsecutivo() {
		return this.consecutivo;
	}

	public void setConsecutivo(int consecutivo) {
		this.consecutivo = consecutivo;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	@NotNull
	public Gastos getGastos() {
		return this.gastos;
	}

	public void setGastos(Gastos gastos) {
		this.gastos = gastos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "numcuentapromotor", referencedColumnName = "numcuenta"),
			@JoinColumn(name = "documentopromotor", referencedColumnName = "documento") })
	public Cuentapromotor getCuentapromotor() {
		return this.cuentapromotor;
	}

	public void setCuentapromotor(Cuentapromotor cuentapromotor) {
		this.cuentapromotor = cuentapromotor;
	}

	@Column(name = "preciobolivar", precision = 5)
	public BigDecimal getPreciobolivar() {
		return this.preciobolivar;
	}

	public void setPreciobolivar(BigDecimal preciobolivar) {
		this.preciobolivar = preciobolivar;
	}

	@Column(name = "tipobolivar", length = 3)
	@Length(max = 3)
	public String getTipobolivar() {
		return this.tipobolivar;
	}

	public void setTipobolivar(String tipobolivar) {
		this.tipobolivar = tipobolivar;
	}

	@Column(name = "valorbolivar", precision = 12, scale = 0)
	public Long getValorbolivar() {
		return this.valorbolivar;
	}

	public void setValorbolivar(Long valorbolivar) {
		this.valorbolivar = valorbolivar;
	}

	@Column(name = "numcuenta", length = 25)
	@Length(max = 25)
	public String getNumcuenta() {
		return this.numcuenta;
	}

	public void setNumcuenta(String numcuenta) {
		this.numcuenta = numcuenta;
	}

	@Column(name = "preciocompra", precision = 5)
	public BigDecimal getPreciocompra() {
		return this.preciocompra;
	}

	public void setPreciocompra(BigDecimal preciocompra) {
		this.preciocompra = preciocompra;
	}

	@Column(name = "precioasesor", precision = 5)
	public BigDecimal getPrecioasesor() {
		return this.precioasesor;
	}

	public void setPrecioasesor(BigDecimal precioasesor) {
		this.precioasesor = precioasesor;
	}

}
