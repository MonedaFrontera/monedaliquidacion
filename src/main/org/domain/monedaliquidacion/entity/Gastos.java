package org.domain.monedaliquidacion.entity;

// Generated 9/06/2015 03:23:02 PM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;

/**
 * Gastos generated by hbm2java
 */
@Entity
@Table(name = "gastos")
public class Gastos implements java.io.Serializable {

	private int consecutivo;
	private Personal personal;
	private Tipogasto tipogasto;
	private Date fecha;
	private Long valor;
	private String observacion;
	private BigDecimal valorbolivar;
	private Transferencia transferencia;

	public Gastos() {
	}

	public Gastos(int consecutivo) {
		this.consecutivo = consecutivo;
	}

	public Gastos(int consecutivo, Personal personal, Tipogasto tipogasto,
			Date fecha, Long valor, String observacion,
			BigDecimal valorbolivar, Transferencia transferencia) {
		this.consecutivo = consecutivo;
		this.personal = personal;
		this.tipogasto = tipogasto;
		this.fecha = fecha;
		this.valor = valor;
		this.observacion = observacion;
		this.valorbolivar = valorbolivar;
		this.transferencia = transferencia;
	}

	@Id
	@Column(name = "consecutivo", unique = true, nullable = false)
	public int getConsecutivo() {
		return this.consecutivo;
	}

	public void setConsecutivo(int consecutivo) {
		this.consecutivo = consecutivo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "documento")
	public Personal getPersonal() {
		return this.personal;
	}

	public void setPersonal(Personal personal) {
		this.personal = personal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipogasto")
	public Tipogasto getTipogasto() {
		return this.tipogasto;
	}

	public void setTipogasto(Tipogasto tipogasto) {
		this.tipogasto = tipogasto;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha", length = 13)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@Column(name = "valor", precision = 14, scale = 0)
	public Long getValor() {
		return this.valor;
	}

	public void setValor(Long valor) {
		this.valor = valor;
	}

	@Column(name = "observacion", length = 200)
	@Length(max = 200)
	public String getObservacion() {
		return this.observacion;
	}

	public void setObservacion(String observacion) {
		this.observacion = observacion;
	}

	@Column(name = "valorbolivar", precision = 5, scale = 3)
	public BigDecimal getValorbolivar() {
		return this.valorbolivar;
	}

	public void setValorbolivar(BigDecimal valorbolivar) {
		this.valorbolivar = valorbolivar;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "gastos")
	public Transferencia getTransferencia() {
		return this.transferencia;
	}

	public void setTransferencia(Transferencia transferencia) {
		this.transferencia = transferencia;
	}

}
