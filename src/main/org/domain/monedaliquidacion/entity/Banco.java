package org.domain.monedaliquidacion.entity;

// Generated 9/06/2015 03:23:02 PM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Banco generated by hbm2java
 */
@Entity
@Table(name = "banco")
public class Banco implements java.io.Serializable {

	private String codbanco;
	private String nombrebanco;
	private Byte dias;
	private Boolean activo;
	private Set<Tasaeuropromotorparametro> tasaeuropromotorparametros = new HashSet<Tasaeuropromotorparametro>(
			0);
	private Set<Tasadolarparametro> tasadolarparametros = new HashSet<Tasadolarparametro>(
			0);
	private Set<Cuentapromotor> cuentapromotors = new HashSet<Cuentapromotor>(0);
	private Set<Porcentajecomisiontxparam> porcentajecomisiontxparams = new HashSet<Porcentajecomisiontxparam>(
			0);
	private Set<Tasadolarpromotorparametro> tasadolarpromotorparametros = new HashSet<Tasadolarpromotorparametro>(
			0);
	private Set<Porcentcomisiontxparampromo> porcentcomisiontxparampromos = new HashSet<Porcentcomisiontxparampromo>(
			0);
	private Set<Tarjeta> tarjetas = new HashSet<Tarjeta>(0);
	private Set<Tasaeuroparametro> tasaeuroparametros = new HashSet<Tasaeuroparametro>(
			0);
	private Set<Cuenta> cuentas = new HashSet<Cuenta>(0);
	private Set<Activacion> activacions = new HashSet<Activacion>(0);

	public Banco() {
	}

	public Banco(String codbanco, String nombrebanco) {
		this.codbanco = codbanco;
		this.nombrebanco = nombrebanco;
	}

	public Banco(String codbanco, String nombrebanco, Byte dias,
			Boolean activo,
			Set<Tasaeuropromotorparametro> tasaeuropromotorparametros,
			Set<Tasadolarparametro> tasadolarparametros,
			Set<Cuentapromotor> cuentapromotors,
			Set<Porcentajecomisiontxparam> porcentajecomisiontxparams,
			Set<Tasadolarpromotorparametro> tasadolarpromotorparametros,
			Set<Porcentcomisiontxparampromo> porcentcomisiontxparampromos,
			Set<Tarjeta> tarjetas, Set<Tasaeuroparametro> tasaeuroparametros,
			Set<Cuenta> cuentas, Set<Activacion> activacions) {
		this.codbanco = codbanco;
		this.nombrebanco = nombrebanco;
		this.dias = dias;
		this.activo = activo;
		this.tasaeuropromotorparametros = tasaeuropromotorparametros;
		this.tasadolarparametros = tasadolarparametros;
		this.cuentapromotors = cuentapromotors;
		this.porcentajecomisiontxparams = porcentajecomisiontxparams;
		this.tasadolarpromotorparametros = tasadolarpromotorparametros;
		this.porcentcomisiontxparampromos = porcentcomisiontxparampromos;
		this.tarjetas = tarjetas;
		this.tasaeuroparametros = tasaeuroparametros;
		this.cuentas = cuentas;
		this.activacions = activacions;
	}

	@Id
	@Column(name = "codbanco", unique = true, nullable = false, length = 3)
	@NotNull
	@Length(max = 3)
	public String getCodbanco() {
		return this.codbanco;
	}

	public void setCodbanco(String codbanco) {
		this.codbanco = codbanco;
	}

	@Column(name = "nombrebanco", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getNombrebanco() {
		return this.nombrebanco;
	}

	public void setNombrebanco(String nombrebanco) {
		this.nombrebanco = nombrebanco;
	}

	@Column(name = "dias", precision = 2, scale = 0)
	public Byte getDias() {
		return this.dias;
	}

	public void setDias(Byte dias) {
		this.dias = dias;
	}

	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Tasaeuropromotorparametro> getTasaeuropromotorparametros() {
		return this.tasaeuropromotorparametros;
	}

	public void setTasaeuropromotorparametros(
			Set<Tasaeuropromotorparametro> tasaeuropromotorparametros) {
		this.tasaeuropromotorparametros = tasaeuropromotorparametros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Tasadolarparametro> getTasadolarparametros() {
		return this.tasadolarparametros;
	}

	public void setTasadolarparametros(
			Set<Tasadolarparametro> tasadolarparametros) {
		this.tasadolarparametros = tasadolarparametros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Cuentapromotor> getCuentapromotors() {
		return this.cuentapromotors;
	}

	public void setCuentapromotors(Set<Cuentapromotor> cuentapromotors) {
		this.cuentapromotors = cuentapromotors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Porcentajecomisiontxparam> getPorcentajecomisiontxparams() {
		return this.porcentajecomisiontxparams;
	}

	public void setPorcentajecomisiontxparams(
			Set<Porcentajecomisiontxparam> porcentajecomisiontxparams) {
		this.porcentajecomisiontxparams = porcentajecomisiontxparams;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Tasadolarpromotorparametro> getTasadolarpromotorparametros() {
		return this.tasadolarpromotorparametros;
	}

	public void setTasadolarpromotorparametros(
			Set<Tasadolarpromotorparametro> tasadolarpromotorparametros) {
		this.tasadolarpromotorparametros = tasadolarpromotorparametros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Porcentcomisiontxparampromo> getPorcentcomisiontxparampromos() {
		return this.porcentcomisiontxparampromos;
	}

	public void setPorcentcomisiontxparampromos(
			Set<Porcentcomisiontxparampromo> porcentcomisiontxparampromos) {
		this.porcentcomisiontxparampromos = porcentcomisiontxparampromos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Tarjeta> getTarjetas() {
		return this.tarjetas;
	}

	public void setTarjetas(Set<Tarjeta> tarjetas) {
		this.tarjetas = tarjetas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Tasaeuroparametro> getTasaeuroparametros() {
		return this.tasaeuroparametros;
	}

	public void setTasaeuroparametros(Set<Tasaeuroparametro> tasaeuroparametros) {
		this.tasaeuroparametros = tasaeuroparametros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Cuenta> getCuentas() {
		return this.cuentas;
	}

	public void setCuentas(Set<Cuenta> cuentas) {
		this.cuentas = cuentas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "banco")
	public Set<Activacion> getActivacions() {
		return this.activacions;
	}

	public void setActivacions(Set<Activacion> activacions) {
		this.activacions = activacions;
	}

}
