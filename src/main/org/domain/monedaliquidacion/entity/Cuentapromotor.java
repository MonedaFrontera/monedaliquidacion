package org.domain.monedaliquidacion.entity;

// Generated 9/06/2015 03:23:02 PM by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Cuentapromotor generated by hbm2java
 */
@Entity
@Table(name = "cuentapromotor")
public class Cuentapromotor implements java.io.Serializable {

	private CuentapromotorId id;
	private Promotor promotor;
	private Banco banco;
	private String nombre;
	private Set<Transferencia> transferencias = new HashSet<Transferencia>(0);

	public Cuentapromotor() {
	}

	public Cuentapromotor(CuentapromotorId id, Promotor promotor, Banco banco) {
		this.id = id;
		this.promotor = promotor;
		this.banco = banco;
	}

	public Cuentapromotor(CuentapromotorId id, Promotor promotor, Banco banco,
			String nombre, Set<Transferencia> transferencias) {
		this.id = id;
		this.promotor = promotor;
		this.banco = banco;
		this.nombre = nombre;
		this.transferencias = transferencias;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "numcuenta", column = @Column(name = "numcuenta", nullable = false, length = 25)),
			@AttributeOverride(name = "documento", column = @Column(name = "documento", nullable = false, length = 15)) })
	@NotNull
	public CuentapromotorId getId() {
		return this.id;
	}

	public void setId(CuentapromotorId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "documento", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Promotor getPromotor() {
		return this.promotor;
	}

	public void setPromotor(Promotor promotor) {
		this.promotor = promotor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codbanco", nullable = false)
	@NotNull
	public Banco getBanco() {
		return this.banco;
	}

	public void setBanco(Banco banco) {
		this.banco = banco;
	}

	@Column(name = "nombre", length = 100)
	@Length(max = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cuentapromotor")
	public Set<Transferencia> getTransferencias() {
		return this.transferencias;
	}

	public void setTransferencias(Set<Transferencia> transferencias) {
		this.transferencias = transferencias;
	}

}
