package org.domain.monedaliquidacion.entity;

// Generated 9/06/2015 03:23:02 PM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.NotNull;

/**
 * Inventario generated by hbm2java
 */
@Entity
@Table(name = "inventario", uniqueConstraints = @UniqueConstraint(columnNames = "refproducto"))
public class Inventario implements java.io.Serializable {

	private InventarioId id;
	private Producto producto;
	private Establecimiento establecimiento;
	private BigDecimal valor;
	private BigDecimal cantidad;
	private Boolean activo;
	private Boolean prioridad;
	private Set<Detallefactura> detallefacturas = new HashSet<Detallefactura>(0);

	public Inventario() {
	}

	public Inventario(InventarioId id, Producto producto,
			Establecimiento establecimiento) {
		this.id = id;
		this.producto = producto;
		this.establecimiento = establecimiento;
	}

	public Inventario(InventarioId id, Producto producto,
			Establecimiento establecimiento, BigDecimal valor,
			BigDecimal cantidad, Boolean activo, Boolean prioridad,
			Set<Detallefactura> detallefacturas) {
		this.id = id;
		this.producto = producto;
		this.establecimiento = establecimiento;
		this.valor = valor;
		this.cantidad = cantidad;
		this.activo = activo;
		this.prioridad = prioridad;
		this.detallefacturas = detallefacturas;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "refproducto", column = @Column(name = "refproducto", unique = true, nullable = false, length = 20)),
			@AttributeOverride(name = "codigounico", column = @Column(name = "codigounico", nullable = false, length = 8)) })
	@NotNull
	public InventarioId getId() {
		return this.id;
	}

	public void setId(InventarioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "refproducto", unique = true, nullable = false, insertable = false, updatable = false)
	@NotNull
	public Producto getProducto() {
		return this.producto;
	}

	public void setProducto(Producto producto) {
		this.producto = producto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigounico", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Establecimiento getEstablecimiento() {
		return this.establecimiento;
	}

	public void setEstablecimiento(Establecimiento establecimiento) {
		this.establecimiento = establecimiento;
	}

	@Column(name = "valor", precision = 10)
	public BigDecimal getValor() {
		return this.valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	@Column(name = "cantidad", precision = 10)
	public BigDecimal getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(BigDecimal cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "activo")
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}

	@Column(name = "prioridad")
	public Boolean getPrioridad() {
		return this.prioridad;
	}

	public void setPrioridad(Boolean prioridad) {
		this.prioridad = prioridad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventario")
	public Set<Detallefactura> getDetallefacturas() {
		return this.detallefacturas;
	}

	public void setDetallefacturas(Set<Detallefactura> detallefacturas) {
		this.detallefacturas = detallefacturas;
	}

}
